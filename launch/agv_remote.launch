<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="false"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find agv)/urdf/ifr_agv.xacro'" />
  <param name="use_gui" value="true"/>

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model ifr_agv -param robot_description" />
   
  <!-- Robot State Publisher-->
  <arg name="use_tf_static" default="false"/> 
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" >
          <param name="use_tf_static" value="$(arg use_tf_static)"/>
  </node>
  <!--Static Transformer-->
  <!-- <node name="static_transformer_map2odom" pkg="tf" type="static_transform_publisher" args="0.0 0.0 0.0 0.0 0.0 0.0 map odom 100 " />
  <node name="static_transformer_odom2basefootprint" pkg="tf" type="static_transform_publisher" args="0.0 0.0 0.0 0.0 0.0 0.0 odom base_footprint 100 " /> -->

  
  <!-- Run Rviz -->
  <!--node name="rviz" pkg="rviz" type="rviz" required="true"/-->

</launch>
